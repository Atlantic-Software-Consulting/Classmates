// const TestContext = {
//   req: IncomingMessage {
//     _readableState: ReadableState {
//       objectMode: false,
//       highWaterMark: 16384,
//       buffer: BufferList { head: null, tail: null, length: 0 },
//       length: 0,
//       pipes: [],
//       flowing: null,
//       ended: true,
//       endEmitted: false,
//       reading: false,
//       constructed: true,
//       sync: true,
//       needReadable: false,
//       emittedReadable: false,
//       readableListening: false,
//       resumeScheduled: false,
//       errorEmitted: false,
//       emitClose: true,
//       autoDestroy: true,
//       destroyed: false,
//       errored: null,
//       closed: false,
//       closeEmitted: false,
//       defaultEncoding: 'utf8',
//       awaitDrainWriters: null,
//       multiAwaitDrain: false,
//       readingMore: true,
//       dataEmitted: false,
//       decoder: null,
//       encoding: null,
//       [Symbol(kPaused)]: null
//     },
//     _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
//     _eventsCount: 1,
//     _maxListeners: undefined,
//     socket: Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: [WritableState],
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: [Server],
//       _server: [Server],
//       parser: [HTTPParser],
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       setEncoding: [Function: socketSetEncoding],
//       _paused: false,
//       _httpMessage: [ServerResponse],
//       [Symbol(async_id_symbol)]: 19986,
//       [Symbol(kHandle)]: [TCP],
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     httpVersionMajor: 1,
//     httpVersionMinor: 1,
//     httpVersion: '1.1',
//     complete: true,
//     rawHeaders: [
//       'Host',
//       'localhost:63949',
//       'Connection',
//       'keep-alive',
//       'sec-ch-ua',
//       '" Not A;Brand";v="99", "Chromium";v="99", "Google Chrome";v="99"',
//       'sec-ch-ua-mobile',
//       '?0',
//       'sec-ch-ua-platform',
//       '"macOS"',
//       'Upgrade-Insecure-Requests',
//       '1',
//       'User-Agent',
//       'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.83 Safari/537.36',
//       'Accept',
//       'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
//       'Sec-Fetch-Site',
//       'none',
//       'Sec-Fetch-Mode',
//       'navigate',
//       'Sec-Fetch-User',
//       '?1',
//       'Sec-Fetch-Dest',
//       'document',
//       'Accept-Encoding',
//       'gzip, deflate, br',
//       'Accept-Language',
//       'en-US,en;q=0.9',
//       'Cookie',
//       'connect.sid=s%3AbN8NNO6MEpX4tKNN8M2V9FnFhFAdZfIZ.f%2F0D1AFkQxlKf0Z2t60A%2Fj4ny%2FhyBEHxRTe%2BCZguzaQ; io=Zz6asEE_y2l-7fepAAAE'
//     ],
//     rawTrailers: [],
//     aborted: false,
//     upgrade: false,
//     url: '/uQy9o1GcXPRbD9lVoNPTqROMwvs2/my-profile',
//     method: 'GET',
//     statusCode: null,
//     statusMessage: null,
//     client: Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: [WritableState],
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: [Server],
//       _server: [Server],
//       parser: [HTTPParser],
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       setEncoding: [Function: socketSetEncoding],
//       _paused: false,
//       _httpMessage: [ServerResponse],
//       [Symbol(async_id_symbol)]: 19986,
//       [Symbol(kHandle)]: [TCP],
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     _consuming: false,
//     _dumped: false,
//     cookies: {
//       'connect.sid': 's:bN8NNO6MEpX4tKNN8M2V9FnFhFAdZfIZ.f/0D1AFkQxlKf0Z2t60A/j4ny/hyBEHxRTe+CZguzaQ',
//       io: 'Zz6asEE_y2l-7fepAAAE'
//     },
//     [Symbol(kCapture)]: false,
//     [Symbol(kHeaders)]: {
//       host: 'localhost:63949',
//       connection: 'keep-alive',
//       'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="99", "Google Chrome";v="99"',
//       'sec-ch-ua-mobile': '?0',
//       'sec-ch-ua-platform': '"macOS"',
//       'upgrade-insecure-requests': '1',
//       'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.83 Safari/537.36',
//       accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
//       'sec-fetch-site': 'none',
//       'sec-fetch-mode': 'navigate',
//       'sec-fetch-user': '?1',
//       'sec-fetch-dest': 'document',
//       'accept-encoding': 'gzip, deflate, br',
//       'accept-language': 'en-US,en;q=0.9',
//       cookie: 'connect.sid=s%3AbN8NNO6MEpX4tKNN8M2V9FnFhFAdZfIZ.f%2F0D1AFkQxlKf0Z2t60A%2Fj4ny%2FhyBEHxRTe%2BCZguzaQ; io=Zz6asEE_y2l-7fepAAAE'
//     },
//     [Symbol(kHeadersCount)]: 30,
//     [Symbol(kTrailers)]: null,
//     [Symbol(kTrailersCount)]: 0,
//     [Symbol(RequestTimeout)]: undefined,
//     [Symbol(NextRequestMeta)]: {
//       __NEXT_INIT_URL: 'http://localhost:3000/uQy9o1GcXPRbD9lVoNPTqROMwvs2/my-profile',
//       __NEXT_INIT_QUERY: {},
//       __nextHadTrailingSlash: undefined
//     }
//   },
//   res: ServerResponse {
//     _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
//     _eventsCount: 1,
//     _maxListeners: undefined,
//     outputData: [],
//     outputSize: 0,
//     writable: true,
//     destroyed: false,
//     _last: false,
//     chunkedEncoding: false,
//     shouldKeepAlive: true,
//     maxRequestsOnConnectionReached: false,
//     _defaultKeepAlive: true,
//     useChunkedEncodingByDefault: true,
//     sendDate: true,
//     _removedConnection: false,
//     _removedContLen: false,
//     _removedTE: false,
//     _contentLength: null,
//     _hasBody: true,
//     _trailer: '',
//     finished: false,
//     _headerSent: false,
//     _closed: false,
//     socket: Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 8,
//       _maxListeners: undefined,
//       _writableState: [WritableState],
//       allowHalfOpen: true,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: [Server],
//       _server: [Server],
//       parser: [HTTPParser],
//       on: [Function: socketListenerWrap],
//       addListener: [Function: socketListenerWrap],
//       prependListener: [Function: socketListenerWrap],
//       setEncoding: [Function: socketSetEncoding],
//       _paused: false,
//       _httpMessage: [Circular *1],
//       [Symbol(async_id_symbol)]: 19986,
//       [Symbol(kHandle)]: [TCP],
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0,
//       [Symbol(RequestTimeout)]: undefined
//     },
//     _header: null,
//     _keepAliveTimeout: 5000,
//     _onPendingData: [Function: bound updateOutgoingData],
//     req: IncomingMessage {
//       _readableState: [ReadableState],
//       _events: [Object: null prototype],
//       _eventsCount: 1,
//       _maxListeners: undefined,
//       socket: [Socket],
//       httpVersionMajor: 1,
//       httpVersionMinor: 1,
//       httpVersion: '1.1',
//       complete: true,
//       rawHeaders: [Array],
//       rawTrailers: [],
//       aborted: false,
//       upgrade: false,
//       url: '/uQy9o1GcXPRbD9lVoNPTqROMwvs2/my-profile',
//       method: 'GET',
//       statusCode: null,
//       statusMessage: null,
//       client: [Socket],
//       _consuming: false,
//       _dumped: false,
//       cookies: [Object],
//       [Symbol(kCapture)]: false,
//       [Symbol(kHeaders)]: [Object],
//       [Symbol(kHeadersCount)]: 30,
//       [Symbol(kTrailers)]: null,
//       [Symbol(kTrailersCount)]: 0,
//       [Symbol(RequestTimeout)]: undefined,
//       [Symbol(NextRequestMeta)]: [Object]
//     },
//     _sent100: false,
//     _expect_continue: false,
//     statusCode: 200,
//     flush: [Function: flush],
//     write: [Function: write],
//     end: [Function: end],
//     on: [Function: on],
//     writeHead: [Function: writeHead],
//     [Symbol(kCapture)]: false,
//     [Symbol(kNeedDrain)]: false,
//     [Symbol(corked)]: 0,
//     [Symbol(kOutHeaders)]: null
//   },
//   query: { 'user-id': 'uQy9o1GcXPRbD9lVoNPTqROMwvs2' },
//   resolvedUrl: '/uQy9o1GcXPRbD9lVoNPTqROMwvs2/my-profile',
//   params: { 'user-id': 'uQy9o1GcXPRbD9lVoNPTqROMwvs2' },
//   locales: undefined,
//   locale: undefined,
//   defaultLocale: undefined
// }

// export default TestContext;