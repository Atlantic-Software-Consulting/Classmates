import { db } from './firestoreConfigPH';
import {
  collection,
  doc,
  getDoc,
  getDocs,
  addDoc,
  query,
  where,
  deleteDoc,
  updateDoc,
  Timestamp
} from "firebase/firestore";

const coursePhotos = {
  'Science': 'https://epi-rsc.rsc-cdn.org/globalassets/05-journals-books-databases/our-journals/00-journal-pages-heros/Chemical-Science-HERO.jpg?version=9e72b3c3',
  'History': 'https://alameda.edu/wp-content/uploads/2021/07/History.png',
  'Literature': 'https://media.istockphoto.com/photos/book-and-glowing-letters-picture-id522513933?k=20&m=522513933&s=612x612&w=0&h=NjqmZlnwoTM7wgLI_rx1hiGdLb2xwT9UixPYR2d1ciI=',
  'Language': 'https://i0.wp.com/www.michigandaily.com/wp-content/uploads/2021/03/0-1.jpg?fit=1200%2C960&ssl=1',
  'Math': 'https://www.actuaries.org.uk/sites/default/files/curriculum/Actuarial%20Mathematics%20%28CM1%29%20Banner.jpg'
}

/* READ */
// getCourses
const getCourses = async (req, res) => {
  try {
    const querySnapshot = await getDocs(collection(db, 'courses'));
    const result = [];
    querySnapshot.forEach(doc => {
      result.push(doc.data());
    })
    console.log('all courses: ', result);
  } catch (err) {
    console.log('Error retrieving courses');
    // res.status(400).send(`Error retrieving classes: ${err}`);
  }
}

// getCoursesById
const getCoursesById = async (req, res) => {
  // get id from req.query
  // let { id } = req.query;
  let id = 1;

  try {
    const q = query(collection(db, 'courses'), where('id', '==', id));
    const result = [];
    const querySnapshot = await getDocs(q);
    querySnapshot.forEach(doc => {
      result.push(doc.data());
    });
    console.log('courses by course id ', result[0]);
    // res.json(result[0]);
  } catch (err) {
    console.log('Error retrieving courses by course id: ', err);
    // res.status(400).send(err);
  }
};

// getCoursesByMentorId
const getCoursesByMentorId = async (req, res) => {
  // get mentor's uid from req.query
  let id = '1';

  try {
    const q = query(collection(db, 'courses'), where('mentor.id', '==', id));
    const result = [];
    const querySnapshot = await getDocs(q);
    querySnapshot.forEach(doc => {
      result.push(doc.data());
    });
    console.log('courses by mentor id ', result);
    // res.json(result);
  } catch (err) {
    console.log('Error retrieving courses by mentor id: ', err);
    // res.status(400).send(err);
  }
};

// getCoursesByMenteeId
// https://firebase.google.com/docs/firestore/query-data/queries#array_membership
const getCoursesByMenteeId = async (req, res) => {
  // get mentorId from req.query
  let mentor_id = Number('1');

  try {

    const coursesQuery = query(collection(db, 'courses'));
    const result = [];
    const querySnapshot = await getDocs(coursesQuery);
    querySnapshot.forEach(doc => {
      const menteeList =  doc.data().mentees;
      menteeList.forEach(mentee => {
        if (mentee.id === id) {
          result.push(mentee);
        }
      })
    });
    console.log('courses by mentee id ', result);
    // res.json(result);
  } catch (err) {
    console.log('Error retrieving courses by mentee id: ', err);
    // res.status(400).send(err);
  }
};

// getCoursesBySubjectName
const getCoursesBySubjectName = async (req, res) => {
  // get subject name from req.query
  let subject = 'Science';

  try {
    const q = query(collection(db, 'courses'), where('subject', '==', subject));
    const result = [];
    const querySnapshot = await getDocs(q);
    querySnapshot.forEach(doc => {
      result.push(doc.data());
    });
    console.log('courses by subject name: ', result);
    // res.json(result);
  } catch (err) {
    console.log('Error retrieving courses by subject name: ', err);
    // res.status(400).send(err);
  }
}

const getAllSubjects = async (req, res) => {
  try {
    const querySnapshot = await getDocs(collection(db, 'courses'));
    const result = [];
    querySnapshot.forEach(doc => {
      if (!result.includes(doc.data().subject)) {
        result.push(doc.data().subject);
      }
    })
    console.log('all subjects: ', result);
  } catch (err) {
    console.log('Error retrieving all subjects');
  }
}

/* CREATE */
//createNewCourse
// instead of using setDoc to create a document which will requries you to specificy an ID,
// since we want the document name to be an autogenerated id, using addDoc instead
// https://firebase.google.com/docs/firestore/manage-data/add-data#add_a_document
const createNewCourse = async (req, res) => {
  // get parameters from req body
  let name = 'History';
  let startDate = new Date('05 October 2011 14:48 UTC');
  let endDate = new Date('05 October 2011 14:48 UTC');
  let subject = 'World History II';
  let mentorId = '11';
  let mentorFirstName = 'Quinton';
  let mentorLastName = 'Maki';
  let description = 'Vivamus in felis eu sapien cursus vestibulum. Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem.'
  let meetingUrl = '';
  let photo = coursePhotos[name];

  try {
    const docRef = await addDoc(collection(db, 'courses'), {
      name: name,
      "start_date": startDate.toISOString(),
      "end_date": endDate.toISOString(),
      mentees: [],
      subject: subject,
      mentor: {
        "id": mentorId,
        "name": {
          "first_name": mentorFirstName,
          "last_name": mentorLastName
        }
      },
      capacity: 25,
      endorsements: 0,
      description: description,
      "meeting_url": meetingUrl,
      photo: photo
    });
    console.log("Document written with ID: ", docRef);
  } catch (err) {
    console.log('Error posting new course: ', err);
  }
}

/* UPDATE */
//updateCourseInfo
const updateCourseInfo = async (req, res) => {
  // get courseId from req.query
  // let { id } = req.query;
  // get parameters to change from req.body

}

/* DELETE */
//removeCourse
const removeCourse = async (req, res) => {
  // grab course id from req.query
  let id = 'ByrYv9GozbxkpzTjoLiO';
  try {
    const querySnapshot = await deleteDoc(doc(db, 'courses', id));
    console.log(querySnapshot);
  } catch (err) {
    console.log(`Error deleting course ${id}: ${err}`);
  }
};

module.exports = {
  getCourses,
  getCoursesById,
  getCoursesByMentorId,
  getCoursesByMenteeId,
  getCoursesBySubjectName,
  getAllSubjects,
  createNewCourse,
  removeCourse
};